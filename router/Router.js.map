{"version":3,"file":"Router.js","sourceRoot":"","sources":["../../src/router/Router.ts"],"names":[],"mappings":"AAGA,MAAM,CAAC,OAAO,OAAO,MAAM;IAGzB,YAAY,IAAa,EAAE,MAAe;QAO1C,gBAAW,GAAG,CAAC,KAAiB,EAAQ,EAAE;YACxC,IAAI,CAAC,IAAI,CACP,KAAK,CAAC,OAAO,CAAC,EAAE,EAChB,KAAK,CAAC,OAAO,CAAC,WAAW,EACzB,KAAK,CAAC,OAAO,CAAC,UAAU,CACzB,CAAC;QACJ,CAAC,CAAC;QAZA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,EAAE,KAAK,CAAC,CAAC;IAC3E,CAAC;IAUD,UAAU;QACR,MAAM,GAAG,GAAG,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC;QACzC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,SAAS,CAAC,IAAY;QACpB,OAAO,CACL,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI;YAClD,IAAI,EAAE,GAAG;YACT,QAAQ,EAAE,yBAAyB;SACpC,CACF,CAAC;IACJ,CAAC;IAED,IAAI,CACF,IAAY,EACZ,eAAe,GAAkB,EAAE,CACjC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;QACtB,OAAO,EAAE,CAAC;IACZ,CAAC,CAAC,EACJ,cAAc,GAAkB,EAAE,CAChC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;QACtB,OAAO,EAAE,CAAC;IACZ,CAAC,CAAC;QAEJ,KAAK,YAAY,EAAE;aAChB,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aAChC,IAAI,CAAC,GAAG,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC;IAC/B,CAAC;IAED,KAAK,CAAC,SAAS,CAAC,IAAY;QAC1B,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAEnC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC,QAAQ,CAAC;QAEjD,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC7B,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,EAAE,MAAM,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;YACjD,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,CAAC;IACL,CAAC;CACF","sourcesContent":["import Route from \"./Route.js\";\r\nimport RouteEvent from \"./RouteEvent.js\";\r\n\r\nexport default class Router {\r\n  routes: Route[];\r\n  view: Element;\r\n  constructor(view: Element, routes: Route[]) {\r\n    this.view = view;\r\n    this.routes = routes;\r\n    this.initRouter(); // called when going loading a page for first time\r\n    view.addEventListener(\"route\", { handleEvent: this.handleEvent }, false);\r\n  }\r\n\r\n  handleEvent = (event: RouteEvent): void => {\r\n    this.push(\r\n      event.details.to,\r\n      event.details.beforeRoute,\r\n      event.details.afterRoute\r\n    );\r\n  };\r\n\r\n  initRouter(): void {\r\n    const url = globalThis.location.pathname;\r\n    this.push(url);\r\n  }\r\n\r\n  findRoute(path: string): Route {\r\n    return (\r\n      this.routes.find((route) => route.path === path) ?? {\r\n        path: \"/\",\r\n        template: `<home-view></home-view>`,\r\n      }\r\n    );\r\n  }\r\n\r\n  push(\r\n    path: string,\r\n    beforeUpdate = (): Promise<void> =>\r\n      new Promise((resolve) => {\r\n        resolve();\r\n      }),\r\n    afterUpdate = (): Promise<void> =>\r\n      new Promise((resolve) => {\r\n        resolve();\r\n      })\r\n  ): void {\r\n    void beforeUpdate()\r\n      .then(() => this.pushState(path))\r\n      .then(() => afterUpdate());\r\n  }\r\n\r\n  async pushState(path: string): Promise<void> {\r\n    const route = this.findRoute(path);\r\n\r\n    this.view.children[1].innerHTML = route.template;\r\n\r\n    return new Promise((resolve) => {\r\n      window.history.pushState({}, \"done\", route.path);\r\n      resolve();\r\n    });\r\n  }\r\n}\r\n"]}