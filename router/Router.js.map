{"version":3,"file":"Router.js","sourceRoot":"","sources":["../../src/router/Router.ts"],"names":[],"mappings":"AAGA,MAAM,CAAC,OAAO,OAAO,MAAM;IACzB,MAAM,CAAW;IACjB,IAAI,CAAU;IACd,YAAY,CAAS;IACrB,YAAY,IAAa,EAAE,MAAe,EAAE,YAAoB;QAC9D,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;QAC7C,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,EAAE,KAAK,CAAC,CAAC;IAC3E,CAAC;IAED,WAAW,GAAG,CAAC,KAAiB,EAAQ,EAAE;QACxC,IAAI,CAAC,IAAI,CACP,KAAK,CAAC,OAAO,CAAC,EAAE,EAChB,KAAK,CAAC,OAAO,CAAC,WAAW,EACzB,KAAK,CAAC,OAAO,CAAC,UAAU,CACzB,CAAC;IACJ,CAAC,CAAC;IAEM,iBAAiB,CAAC,MAAe,EAAE,YAAoB;QAC7D,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE;YACjC,OAAO,EAAE,GAAG,KAAK,EAAE,IAAI,EAAE,YAAY,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;QACvD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,MAAM,GAAG,GAAG,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC;QACzC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,SAAS,CAAC,IAAY;QACpB,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC5E,CAAC;IAED,IAAI,CACF,IAAY,EACZ,eAAe,GAAkB,EAAE,CACjC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;QACtB,OAAO,EAAE,CAAC;IACZ,CAAC,CAAC,EACJ,cAAc,GAAkB,EAAE,CAChC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;QACtB,OAAO,EAAE,CAAC;IACZ,CAAC,CAAC;QAEJ,KAAK,YAAY,EAAE;aAChB,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aAChC,IAAI,CAAC,GAAG,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC;IAC/B,CAAC;IAED,KAAK,CAAC,SAAS,CAAC,IAAY;QAC1B,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC;QAEvD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC,QAAQ,CAAC;QAEjD,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC7B,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,EAAE,MAAM,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;YACjD,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,CAAC;IACL,CAAC;CACF","sourcesContent":["import Route from \"./Route.js\";\nimport RouteEvent from \"./RouteEvent.js\";\n\nexport default class Router {\n  routes!: Route[];\n  view: Element;\n  landingRoute: string;\n  constructor(view: Element, routes: Route[], landingRoute: string) {\n    this.landingRoute = landingRoute;\n    this.view = view;\n    this.appendUrlToRoutes(routes, landingRoute);\n    this.initRouter();\n    view.addEventListener(\"route\", { handleEvent: this.handleEvent }, false);\n  }\n\n  handleEvent = (event: RouteEvent): void => {\n    this.push(\n      event.details.to,\n      event.details.beforeRoute,\n      event.details.afterRoute\n    );\n  };\n\n  private appendUrlToRoutes(routes: Route[], landingRoute: string): void {\n    this.routes = routes.map((route) => {\n      return { ...route, path: landingRoute + route.path };\n    });\n  }\n\n  initRouter(): void {\n    const url = globalThis.location.pathname;\n    this.push(url);\n  }\n\n  findRoute(path: string): Route {\n    return this.routes.find((route) => route.path === path) ?? this.routes[0];\n  }\n\n  push(\n    path: string,\n    beforeUpdate = (): Promise<void> =>\n      new Promise((resolve) => {\n        resolve();\n      }),\n    afterUpdate = (): Promise<void> =>\n      new Promise((resolve) => {\n        resolve();\n      })\n  ): void {\n    void beforeUpdate()\n      .then(() => this.pushState(path))\n      .then(() => afterUpdate());\n  }\n\n  async pushState(path: string): Promise<void> {\n    const route = this.findRoute(this.landingRoute + path);\n\n    this.view.children[1].innerHTML = route.template;\n\n    return new Promise((resolve) => {\n      window.history.pushState({}, \"done\", route.path);\n      resolve();\n    });\n  }\n}\n"]}